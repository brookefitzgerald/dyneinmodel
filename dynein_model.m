%% constantssteps_per_second = 17;distance_per_step = 8; %nanometersrun_length = 1000; %nanometersseconds_to_simulate = 100;n_steps = steps_per_second*seconds_to_simulate;%% parameters - change thesepause_rate = 0.01; % fraction of time a motor pausespause_step_duration = 3; % how many steps pausenumber_of_motors = 1;chassis_type = 1; % 1 for rigid, 2 for flexiblemax_distance_between_motors = 3; % nanometers%% initialize variablesx_list = zeros(number_of_motors, n_steps);x_list(:,1) = (1:number_of_motors)*(max_distance_between_motors-1);pausing_steps_remaining = zeros(1,number_of_motors);close all;figure;hold on;for t=2:n_steps    % loop through every motor    for i=1:number_of_motors        if pausing_steps_remaining(i)>0            % if motor i has been pausing, decrease the number of pausing steps remaining            pausing_steps_remaining(i) = pausing_steps_remaining(i)-1;        elseif rand <=pause_rate            % if motor i is not pausing then randomly start pausing            pausing_steps_remaining(i) = pause_step_duration;        end    end        if chassis_type==1 %if rigid        x_list(:,t) = rigid_step(pausing_steps_remaining, x_list(:,t-1));    elseif chassis_type==2 % if flexible        x_list(:,t) = flexible_step(pausing_steps_remaining, x_list(:,t-1),number_of_motors, max_distance_between_motors);    end    cla %this command clears any data currently on the plot       plot(x_list(:,t),y_list(:,t),'-ro','MarkerSize',10, 'MarkerFaceColor','r')    plot(x_list(pausing_steps_remaining>0,t),y_list(pausing_steps_remaining>0,t),'bo','MarkerSize',10,'MarkerFaceColor','b')    % this makes sure that the axes stay between multiples of 250     axis([floor(max(x_list(:,t))/250)*250, floor(max(x_list(:,t))/250)*250+250, -1,1])    xlabel('Steps taken')    pause(0.004)endhold offfigureplot((1:n_steps)/steps_per_second, mean(distance_per_step*x_list/seconds_to_simulate))xlabel('Time (s)')ylabel('Motor Velocity (nm/s)')axis tight